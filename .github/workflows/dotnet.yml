name: .NET

on:
  push:
    branches: 
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
      - 'release/**'

  pull_request:
    branches: 
      - main
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    # checks-out repository
    - uses: actions/checkout@v3

    # Setup a dotnet cli and tools
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.x

    # Install tools
    - name: Install tools
      run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.9

    # Restore
    - name: Restore
      run: dotnet restore
    
    # Build
    - name: Build
      run: dotnet build --configuration Release --no-restore 

    # Test
    - name: Test
      run: dotnet test --configuration Release --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput='./TestResults/'
    
    # Package
    - name: Package
      if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/') || startsWith(github.ref, 'refs/heads/release/') }}
      run: dotnet pack --configuration Release --no-restore -o src/DataQI.Commons/lib

    # Upload
    - name: Publish artifacts
      if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/') || startsWith(github.ref, 'refs/heads/release/') }}
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: ${{ github.workspace }}/src/DataQI.Commons/lib/*.nupkg
        retention-days: 5

    # Codecov
    - name: Publish Coverage
      if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/') || startsWith(github.ref, 'refs/heads/release/') }}  
      uses: codecov/codecov-action@v3
      with:
        directory: ${{ github.workspace }}/test/DataQI.Commons.Test/TestResults
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true

  deploy-nuget:
    name: Deploy Nuget
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') }}
    # needs: verify-code
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: prod
    
    steps:
    # Download
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: artifacts

    # NuGet  
    - name: Publish
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_AUTH_TOKEN }}
      run: dotnet nuget push --api-key $NUGET_AUTH_TOKEN --source https://api.nuget.org/v3/index.json  ${{ github.workspace }}/src/DataQI.Commons/lib/*.nupkg